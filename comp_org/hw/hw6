1. 	Consider the following fragment of C code: 
	     for (i=0; i<=100; i++) {
          a[i] = b[i] + C ;
     }

- Assume that a and b are arrays of words and the base address of 
  a is in $a0 and the base address of b is in $a1. 

- Register $t0 holds the variable i and register $s0 the constant C. 

- Write the code for MIPS. 

- How many instructions are executed during the running of your code? 

- How many memory data references will be made during execution?

	     for (i=0; i<=100; i++) {
          a[i] = b[i] + C ;
     }

------------------- MIPS CODE ---------------------------------------
# $a0 --> base address of a
# $a1 --> base address of b
# $t0 --> i 
# $t1 --> tmp value being added up
# $s0 --> C (constant)
# $s1 --> 4 (representing 4 bits) 

# for-loop representation of C in MIPS #

li $t0, 0
loop:
	beq $t0, 101, exit		# exit after we reach 101 (including 100, but not 101)
	mult $s1, $t0			# $rd = 4 * $t0 
	lw $t1, $rd($a1)		# $t1 = b[i] 
	add $t1, $t1, $s0		# $t1 = b[1] + C
	sw $t1, $rd($a0)		# store $t1 in a[i]
	addi $t0, $t0, 1		# increments i by 1
	j loop					# jumps to the top of the loop
exit:

How many instructions are executed during the running of your code? 
 
	(1) - to initialize i
	(7*101) - for all the commands in the loop 

	== 708 commands total

How many memory data references will be made during execution?

	There are 2 data references for each array index, so that means there are 202 data references

 
